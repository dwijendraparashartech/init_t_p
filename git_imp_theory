git_imp_theory  date - july 18

1.diff between git fetch and fit pull ?
Git Fetch --  
1.1. The Git fetch command only downloads new data from a remote repository.
1.2. It does not integrate any of these new data into your working files.
1.3. Command -  $  git fetch origin     or  $  git fetch --all

Git pull -- 
2.1. Git pull updates the current HEAD branch with the latest changes from the remote server.
2.2. Downloads new data and integrate it with the current working files.
2.3. Tries to merge remote changes with your local ones.
Command - git pull origin master

Main diff between git fetch and git pull -
git fetch does not integrate your new data into your working files where pull integrate new data into your current working files.

..............................................................................

How do you resolve conflicts in Git?

Here are the steps that will help you resolve conflicts in Git:

Here are the steps that will help you resolve conflicts in Git:

Identify the files responsible for the conflicts.
Implement the desired changes to the files 
Add the files using the git add command.
The last step is to commit the changes in the file with the help of the git commit command.


..............................................................................

What is the process to revert a commit that has already been pushed and made public?

There are two processes through which you can revert a commit:

1. Remove or fix the bad file in a new commit and push it to the remote repository. Then commit it to the remote repository using:

git commit –m “commit message”

2. Create a new commit to undo all the changes that were made in the bad commit. Use the following command:

git revert <commit id>

..............................................................................

 What is Git stash?

 you want to switch branches to work on something else.
 Git stash takes your modified tracked files and saves it on a stack of unfinished changes that you can reapply at any time. To go back to the work you can use the stash pop.


..............................................................................

What is Git stash vs Git stash pop?
Git stash pop removes the (topmost, by default) stash when applied, whereas git stash apply keeps it in the stash list for future use.
..............................................................................

git reset --mixed is used to undo changes made in the working directory and staging area.

git merge --abort helps stop the merge process and return back to the state before the merging began.

..............................................................................

What is the functionality of git clean command? 
The git clean command removes the untracked files from the working directory.

..............................................................................

what is this command -
Git reset<file>- it is used to unstage a file

..............................................................................

What exactly is tagging in Git?
Tagging enables developers to mark all significant checkpoints as their projects progress.

..............................................................................

What exactly is forking in Git?
It is a repository duplicate and forking allows one to experiment with changes without being concerned about the original project

..............................................................................

How to change any older commit messages?
You can change the most recent commit message with the git commit —amend command.

..............................................................................

What exactly is the forking workflow?
Forking is a git clone operation that is performed on a server copy of a project's repository.

..............................................................................

Write the syntax of rebasing in git.
Syntax is as follows: $git rebase <branch name>

..............................................................................

What is the standard method for branching in GIT?
In GIT, the best way to create a branch is to have one'main' branch and then another branch for implementing the changes that we want to make.

..............................................................................

What exactly is git cherry-pick?
A command typically used to move specific commits from one branch of a repository to another.

command -  git cherry-pick 'commit_id'
..............................................................................

Git: How to cherrypick commit from one branch and create pull request for another branch?

cherry pick command is used to switch commit from one branch to another.
i create a commit in one branch master 
i checkout to branch dev 
in branch dev i will run the git cherry-pick 'commit_id'
and it will shift the commit from master branch to dev branch and i can see it in git log.

..............................................................................

git cherrypick and git rebase has the same functionality of transferring the commit from one branch to another so what is the difference between these two -

possibly the most striking difference between these two commands is how they treat the branch they work on: git cherry-pick usually brings a commit from somewhere else and applies it on top of your current branch, recording a new commit, while git rebase takes your current branch and rewrites a series of its own 

..............................................................................

Define index  -- 
what is index ? 
staging area is the index.


..............................................................................

Tell me something about git stash ?
Git stash can be used in cases where we need to switch in between branches and at the same time not wanting to lose edits in the current branch. Running the git stash command basically pushes the current working directory state and index to the stack for future use and thereby providing a clean working directory for other tasks.

..............................................................................

What is the command used to delete a branch?
To delete a branch we can simply use the command git branch –d [head].
To delete a branch locally, we can simply run the command: git branch -d <local_branch_name>
To delete a branch remotely, run the command: git push origin --delete <remote_branch_name>
Deleting a branching scenario occurs for multiple reasons. One such reason is to get rid of the feature branches once it has been merged into the development branch.

..............................................................................

What does git stash apply command do?
git stash apply command is used for bringing the works back to the working directory from the stack where the changes were stashed using git stash command.
This helps the developers to resume their work where they had last left their work before switching to other branches.

..............................................................................

How will you resolve conflict in Git?

Conflicts occur whenever there are multiple people working on the same file across multiple branches. In such cases, git won't be able to resolve it automatically as it is not capable of deciding what changes has to get the precedence.

Following are the steps are done in order to resolve git conflicts:
1. Identify the files that have conflicts.
2. Discuss with members who have worked on the file and ensure that the required changes are done in the file.
3. Add these files to the staged section by using the git add command.
4. Commit these changes using the git commit command.
5. Finally, push the changes to the branch using the git.

..............................................................................

What is best advisable step in cases of broken commit: Create an additional commit OR amend an existing commit?

There can be cases where we want to revert from the pushed changes and go back to the previous version. To handle this, there are two possible approaches based on the situations:

Approach 1: Fix the bad changes of the files and create a new commit and push to the remote repository. This step is the simplest and most recommended approach to fix bad changes. You can use the command: git commit -m "<message>"
Approach 2: New commit can be created that reverts changes done in the bad commit. It can be done using git revert <name of bad commit>

..............................................................................

What has to be run to squash multiple commits (last N) into a single commit?

git rebase -i HEAD~{{N}}
..............................................................................

How will you know in Git if a branch has already been merged into master?
To know if a branch has been merged into master or not you can use the below commands:

git branch --merged –    It lists the branches that have been merged into the current branch.
git branch --no-merged – It lists the branches that have not been merged.

..............................................................................

The ‘reflog’ command keeps a track of every single change made in the references (branches or tags) of a repository and keeps a log history of the branches and tags that were either created locally or checked out. Reference logs such as the commit snapshot of when the branch was created or cloned, checked-out, renamed, or any commits made on the branch are maintained by Git and listed by the ‘reflog’ command.

Note:  The branch will be recoverable from your working directory only if the branch ever existed in your local repository i.e. the branch was either created locally or checked-out from a remote repository in your local repository for Git to store its reference history logs.

..............................................................................
