designs_patterns_rails.txt 

..............................

Links ::  https://www.udemy.com/course/design-patterns-through-ruby/
Very very good link ::  https://github.com/davidgf/design-patterns-in-ruby
https://www.udemy.com/course/design-patterns-through-ruby/

processor model pattern ::

https://www.educative.io/answers/what-is-the-processor-model-design-pattern-in-rails


Types of Design Patterns ??

1. Design Pattern 
...............................
2. Creational Pattern ::
A. Abstract Factory Design PAttern in Ruby 
B. Factory Method Design Pattern
C. Prototype Design Pattern
D. Singleton Design Pattern
...............................
3. Structural Pattern :: 
Bridge Structure
Composite Structure
Decorator
Facade
Flyweight
Proxy 
...............................
4. Behavioral Pattern :: 
Responsibility Structure
Interpreter 
Iterator
Mediator
Memento
Observer
State
Strategy
Template
Visitor



.....................................................................................
.....................................................................................

Different Other Pattern in Ruby ??


1. adapter  , 2. builder , 3. command , 4. composite , 5. convention_over_configration , 6. decorator , 7. dsl , 8. factory, 9. interpreter , 10. iterator , 11. meta_programming.
12. observer . 13. proxy . 14. singleton, 15. template_method ,16. strategy 

.....................................................................................
.....................................................................................



















1. Presenter or ViewObjects ::
..................................

For the use of sharing view logic we prepare the module inside helper files and reuse that in 
the view files but when if complexity increases then we use the Presenter or ViewObjects 

Before ::

................................

<p> 
  User Full Name: <%= "#{user.first_name} #{user. last_name}" %>       
  <%= link_to "View More Detail", user, class: "W-75 p-3      text-#{user.active? ? "orange" : "
green"} border-#{user.active? ? "orange" : "green"}" %>
</p>

................................

2. Presenter or ViewObjects ::

app/presenters/user_presenter.rb 

................................

class UserPresenter 
  def initialize(user)
    @user = user
  end

   def full_name
     "#{@user.first_name} #{@user. last_name}", 
   end

   def css_color
    @user.active?? "orange" : "green", 
   end
end

..................................

<% presenter = UserPresenter.new(user) %> 
User Full Name: <%= presenter.full_name %> 
<%= link_to "View More Detail", user, class: "W-75 p-3   text-#{presenter.css_color} border-#{presenter.css_color}" %> 

..................................

2. Builder Design Patterns :: 

